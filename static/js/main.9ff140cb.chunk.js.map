{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Tweet/Tweet.module.css","components/Map/Map.module.css","images/covidtracker.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Tweet/Tweet.jsx","components/Map/Map.jsx","components/Map/mapStyles.js","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","finalUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","filter1","name","iso2","filter2","forEach","i","undefined","push","fetchCompleteData","countriesData","params","address","key","process","response","status","results","length","geometry","location","lat","lng","countryCases","isNaN","scale","Math","log2","console","log","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","Select","native","defaultValue","onChange","e","target","Tweet","sourceType","screenName","height","center","style","width","margin","disableDefaultUI","zoomControl","fullscreenControl","Map2","state","selected","this","setState","divStyles","wrapControl","googleMapsApiKey","mapContainerStyle","zoom","id","position","icon","path","window","google","maps","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeWeight","onClick","onCloseClick","React","Component","App","fetchedData","lg","image","src","alt","Map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ff140cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yLnKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__382DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tweet_container__11TLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapControl\":\"Map_wrapControl__2apXN\"};","module.exports = __webpack_public_path__ + \"static/media/covidtracker.6e9de555.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3G0kX\",\"card\":\"Cards_card__2Qcpx\",\"infected\":\"Cards_infected__34TUu\",\"recovered\":\"Cards_recovered__13Rb2\",\"deaths\":\"Cards_deaths__vFt7f\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of active COVID-19 cases.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of recovered COVID-19 cases.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of COVID-19 deaths.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet finalUrl = url;\r\n\r\n\tif (country) {\r\n\t\tfinalUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(finalUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n\t\t\tconfirmed: confirmed.total,\r\n\t\t\tdeaths: deaths.total,\r\n\t\t\tdate\r\n\t\t}));\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\t\tlet filter1 = countries.map((country) => {\r\n\t\t\treturn { name: country.name, iso2: country.iso2 };\r\n\t\t});\r\n\t\tlet filter2 = [];\r\n\t\tfilter1.forEach((country, i) => {\r\n\t\t\tif (country.iso2 !== undefined) {\r\n\t\t\t\tfilter2.push(country);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn filter2;\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchCompleteData = async () => {\r\n\ttry{\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\t\tlet countriesData = [];\r\n\t\tcountries.forEach(async (country) => {\r\n\t\t\tlet response = await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {params: {\r\n\t\t\t\taddress: 'country ' + country.name,\r\n\t\t\t\tkey: process.env.REACT_APP_GOOGLE_KEY\r\n\t\t\t}});\r\n\t\t\tif(response.status === 200 && response.data.results.length > 0){\r\n\t\t\t\t// console.log('res:', response, response.status);\r\n\t\t\t\tlet { lat, lng } = response.data.results[0].geometry.location;\r\n\t\t\t\tlet countryCases = await axios.get(`${url}/countries/${country.name}`);\r\n\t\t\t\t// console.log(`${country.name}: (${lat}, ${lng}), ${countryCases}`)\r\n\t\t\t\tif(country && !isNaN(lat) && countryCases && !isNaN(countryCases.data.confirmed.value)){\r\n\t\t\t\t\tlet scale = 1 + 1.1 * Math.log2(countryCases.data.confirmed.value);\r\n\t\t\t\t\tcountriesData.push({name: country.name, location: {lat: lat, lng: lng}, ...countryCases.data, scale: scale});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// console.log('error:', response)\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn countriesData;\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\t\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                    data: dailyData.map((data) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'rgb(158,126,245)',\r\n                    backgroundColor:'rgb(0,0,255,0.2)',\r\n                    fill: true,\r\n                    }, {\r\n                    data: dailyData.map((data) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgb(241,71,152)',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                    },\r\n                ],\r\n            }}\r\n          />\r\n        ) : null\r\n    );\r\n    \r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgb(158,126,245)', 'rgba(0, 255, 0, 0.5)', 'rgb(241,71,152)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ countries, setCountries ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<FormControl variant=\"outlined\" className={styles.formControl}>\r\n\t\t\t<Select native defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{countries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country.name}>\r\n\t\t\t\t\t\t{country.name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Tweet.module.css';\r\n\r\nconst Tweet = () => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t<TwitterTimelineEmbed sourceType=\"profile\" screenName=\"WHO\" options={{height: 500}}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t<TwitterTimelineEmbed sourceType=\"profile\" screenName=\"PandemicCovid20\" options={{height: 500}}/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  LoadScript \r\n} from \"@react-google-maps/api\";\r\n\r\nimport mapStyles from './mapStyles';\r\nimport divStyles from './Map.module.css';\r\nimport { fetchCompleteData } from '../../api';\r\n \r\n\r\nconst center = { lat: 8, lng: -1 };\r\nconst style = {width:'37vw', height:'50vh', margin: 'auto'};\r\nconst options = {styles: mapStyles, disableDefaultUI: true, zoomControl: true, fullscreenControl: true};\r\nconst googleMapsApiKey = process.env.REACT_APP_GOOGLE_KEY;\r\n\r\nclass Map2 extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {countriesData: [], selected: null};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchCompleteData();\r\n        this.setState({countriesData: data});\r\n    }\r\n    render() {\r\n        const {selected, countriesData} = this.state;\r\n    \r\n        return (\r\n            <div className={divStyles.wrapControl}>\r\n                <LoadScript googleMapsApiKey={googleMapsApiKey}>\r\n                <GoogleMap mapContainerStyle={style} zoom={2} center={center} options={options}>\r\n                    {(countriesData.map((country, id) => (\r\n                        <Marker key={id} position={country.location} icon={{\r\n                            path: window.google.maps.SymbolPath.CIRCLE,\r\n                            scale: country.scale,\r\n                            fillColor: 'red',\r\n                            fillOpacity: 0.3,\r\n                            strokeColor: 'white',\r\n                            strokeWeight: 0.5,\r\n                            }}\r\n                            onClick={()=>{\r\n                                this.setState({selected: country});\r\n                            }}\r\n                        >\r\n                        </Marker>\r\n                    )))}\r\n    \r\n                    {selected && (<InfoWindow position={selected.location} onCloseClick={()=>{this.setState({selected: null})}}>\r\n                        <div>\r\n                            <h2>{selected.name}</h2>\r\n                            <p>Infected: {selected.confirmed.value}</p>\r\n                            <p>Recovered: {selected.recovered.value}</p>\r\n                            <p>Deaths: {selected.deaths.value}</p>\r\n                        </div>                \r\n                        </InfoWindow>)}\r\n                </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n};\r\n\r\nexport default Map2;","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"32\"\r\n            },\r\n            {\r\n                \"lightness\": \"-3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"weight\": \"1.18\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"-70\"\r\n            },\r\n            {\r\n                \"lightness\": \"14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"100\"\r\n            },\r\n            {\r\n                \"lightness\": \"-14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"lightness\": \"12\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, Tweet, Map } from './components';\r\nimport { Grid } from '@material-ui/core';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\nimport image from './images/covidtracker.png';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdata: {},\r\n\t\t\tcountry: ''\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst data = await fetchData(country);\r\n\t\tthis.setState({ data, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t<Grid item lg={7} md={12}>\r\n\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t<img className={styles.image} src={image} alt=\"COVID-19\" />\r\n\t\t\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t\t\t<Cards data={data} />\r\n\t\t\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item lg={5} md={12}>\r\n\t\t\t\t\t<Grid container spacing={1}>\r\n\t\t\t\t\t\t<Grid item md={12}>\r\n\t\t\t\t\t\t\t<Map />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item md={12}>\r\n\t\t\t\t\t\t\t<Tweet />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2SHRy\",\"image\":\"App_image__3x6BT\"};"],"sourceRoot":""}