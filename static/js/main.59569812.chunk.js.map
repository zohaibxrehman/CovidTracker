{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Tweet/Tweet.module.css","components/Map/Map.module.css","images/covidtracker.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/countryToLocation.js","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Tweet/Tweet.jsx","components/Map/Map.jsx","components/Map/mapStyles.js","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Afghanistan","lat","lng","Albania","Algeria","Andorra","Angola","Argentina","Armenia","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Botswana","Brazil","Brunei","Bulgaria","Burma","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Croatia","Cuba","Cyprus","Czechia","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kazakhstan","Kenya","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Mauritania","Mauritius","Mexico","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Namibia","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Panama","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Sudan","Suriname","Switzerland","Syria","Tajikistan","Tanzania","Thailand","Togo","Uganda","Ukraine","Venezuela","US","Spain","Sweden","Turkey","Zimbabwe","Zambia","Yemen","Vietnam","Uruguay","Uzbekistan","Tunisia","url","fetchData","country","a","finalUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","filter1","name","iso2","filter2","forEach","i","undefined","push","fetchCompleteData","countriesData","countryToLocation","countryCases","isNaN","scale","Math","log2","location","console","log","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","Select","native","defaultValue","onChange","e","target","key","Tweet","sourceType","screenName","height","center","style","width","margin","disableDefaultUI","zoomControl","fullscreenControl","Map","state","selected","hasTouched","setTimeout","setState","nextProps","nextState","this","divStyles","wrapControl","googleMapsApiKey","process","mapContainerStyle","zoom","onMouseOver","id","position","icon","path","window","google","maps","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeWeight","onClick","onCloseClick","toLocaleString","React","Component","App","fetchedData","lg","image","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59569812.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yLnKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__382DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tweet_container__11TLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapControl\":\"Map_wrapControl__2apXN\"};","module.exports = __webpack_public_path__ + \"static/media/covidtracker.6e9de555.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3G0kX\",\"card\":\"Cards_card__2Qcpx\",\"infected\":\"Cards_infected__34TUu\",\"recovered\":\"Cards_recovered__13Rb2\",\"deaths\":\"Cards_deaths__vFt7f\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Infected\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of active COVID-19 cases.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of recovered COVID-19 cases.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=',' />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of COVID-19 deaths.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","export default {\r\n\tAfghanistan: { lat: 33.93911, lng: 67.709953 },\r\n\tAlbania: { lat: 41.153332, lng: 20.168331 },\r\n\tAlgeria: { lat: 28.033886, lng: 1.659626 },\r\n\tAndorra: { lat: 42.506285, lng: 1.521801 },\r\n\tAngola: { lat: -11.202692, lng: 17.873887 },\r\n\t'Antigua and Barbuda': { lat: 17.060816, lng: -61.796428 },\r\n\tArgentina: { lat: -38.416097, lng: -63.61667199999999 },\r\n\tArmenia: { lat: 40.069099, lng: 45.038189 },\r\n\tAustralia: { lat: -25.274398, lng: 133.775136 },\r\n\tAustria: { lat: 47.516231, lng: 14.550072 },\r\n\tAzerbaijan: { lat: 40.143105, lng: 47.576927 },\r\n\tBahamas: { lat: 25.03428, lng: -77.39627999999999 },\r\n\tBahrain: { lat: 26.0667, lng: 50.5577 },\r\n\tBangladesh: { lat: 23.684994, lng: 90.356331 },\r\n\tBarbados: { lat: 13.193887, lng: -59.543198 },\r\n\tBelarus: { lat: 53.709807, lng: 27.953389 },\r\n\tBelgium: { lat: 50.503887, lng: 4.469936 },\r\n\tBelize: { lat: 17.189877, lng: -88.49765 },\r\n\tBenin: { lat: 9.30769, lng: 2.315834 },\r\n\tBhutan: { lat: 27.514162, lng: 90.433601 },\r\n\tBolivia: { lat: -16.290154, lng: -63.58865299999999 },\r\n\t'Bosnia and Herzegovina': { lat: 43.915886, lng: 17.679076 },\r\n\tBotswana: { lat: -22.328474, lng: 24.684866 },\r\n\tBrazil: { lat: -14.235004, lng: -51.92528 },\r\n\tBrunei: { lat: 4.535277, lng: 114.727669 },\r\n\tBulgaria: { lat: 42.733883, lng: 25.48583 },\r\n\t'Burkina Faso': { lat: 12.238333, lng: -1.561593 },\r\n\tBurma: { lat: 21.916221, lng: 95.955974 },\r\n\tBurundi: { lat: -3.373056, lng: 29.918886 },\r\n\t'Cabo Verde': { lat: 16.5388, lng: -23.0418 },\r\n\tCambodia: { lat: 12.565679, lng: 104.990963 },\r\n\tCameroon: { lat: 7.369721999999999, lng: 12.354722 },\r\n\tCanada: { lat: 56.130366, lng: -106.346771 },\r\n\t'Central African Republic': { lat: 6.611110999999999, lng: 20.939444 },\r\n\tChad: { lat: 15.454166, lng: 18.732207 },\r\n\tChile: { lat: -35.675147, lng: -71.542969 },\r\n\tChina: { lat: 35.86166, lng: 104.195397 },\r\n\tColombia: { lat: 4.570868, lng: -74.297333 },\r\n\tComoros: { lat: -11.6455, lng: 43.3333 },\r\n\t'Congo (Brazzaville)': { lat: -4.2633597, lng: 15.2428853 },\r\n\t'Congo (Kinshasa)': { lat: -4.038333, lng: 21.758664 },\r\n\t'Costa Rica': { lat: 9.748916999999999, lng: -83.753428 },\r\n\t\"Cote d'Ivoire\": { lat: 7.539988999999999, lng: -5.547079999999999 },\r\n\tCroatia: { lat: 45.1, lng: 15.2000001 },\r\n\tCuba: { lat: 21.521757, lng: -77.781167 },\r\n\tCyprus: { lat: 35.126413, lng: 33.429859 },\r\n\tCzechia: { lat: 49.81749199999999, lng: 15.472962 },\r\n\tDenmark: { lat: 56.26392, lng: 9.501785 },\r\n\tDjibouti: { lat: 11.825138, lng: 42.590275 },\r\n\tDominica: { lat: 15.414999, lng: -61.37097600000001 },\r\n\t'Dominican Republic': { lat: 18.735693, lng: -70.162651 },\r\n\tEcuador: { lat: -1.831239, lng: -78.18340599999999 },\r\n\tEgypt: { lat: 26.820553, lng: 30.802498 },\r\n\t'El Salvador': { lat: 13.794185, lng: -88.89653 },\r\n\t'Equatorial Guinea': { lat: 1.650801, lng: 10.267895 },\r\n\tEritrea: { lat: 15.179384, lng: 39.782334 },\r\n\tEstonia: { lat: 58.595272, lng: 25.0136071 },\r\n\tEswatini: { lat: -26.522503, lng: 31.465866 },\r\n\tEthiopia: { lat: 9.145000000000001, lng: 40.489673 },\r\n\tFiji: { lat: -17.713371, lng: 178.065032 },\r\n\tFinland: { lat: 61.92410999999999, lng: 25.7481511 },\r\n\tFrance: { lat: 46.227638, lng: 2.213749 },\r\n\tGabon: { lat: -0.803689, lng: 11.609444 },\r\n\tGambia: { lat: 13.443182, lng: -15.310139 },\r\n\tGeorgia: { lat: 42.315407, lng: 43.35689199999999 },\r\n\tGermany: { lat: 51.165691, lng: 10.451526 },\r\n\tGhana: { lat: 7.946527, lng: -1.023194 },\r\n\tGreece: { lat: 39.074208, lng: 21.824312 },\r\n\tGrenada: { lat: 12.1165, lng: -61.67899999999999 },\r\n\tGuatemala: { lat: 15.783471, lng: -90.23075899999999 },\r\n\tGuinea: { lat: 9.945587, lng: -9.696645 },\r\n\t'Guinea-Bissau': { lat: 11.803749, lng: -15.180413 },\r\n\tGuyana: { lat: 4.860416, lng: -58.93018 },\r\n\tHaiti: { lat: 18.971187, lng: -72.285215 },\r\n\t'Holy See': { lat: 41.902916, lng: 12.453389 },\r\n\tHonduras: { lat: 15.199999, lng: -86.241905 },\r\n\tHungary: { lat: 47.162494, lng: 19.5033041 },\r\n\tIceland: { lat: 64.963051, lng: -19.020835 },\r\n\tIndia: { lat: 20.593684, lng: 78.96288 },\r\n\tIndonesia: { lat: -0.789275, lng: 113.921327 },\r\n\tIran: { lat: 32.427908, lng: 53.688046 },\r\n\tIraq: { lat: 33.223191, lng: 43.679291 },\r\n\tIreland: { lat: 53.41291, lng: -8.24389 },\r\n\tIsrael: { lat: 31.046051, lng: 34.851612 },\r\n\tItaly: { lat: 41.87194, lng: 12.56738 },\r\n\tJamaica: { lat: 18.109581, lng: -77.297508 },\r\n\tJapan: { lat: 36.204824, lng: 138.252924 },\r\n\tJordan: { lat: 30.585164, lng: 36.238414 },\r\n\tKazakhstan: { lat: 48.019573, lng: 66.923684 },\r\n\tKenya: { lat: -0.023559, lng: 37.906193 },\r\n\t'Korea, South': { lat: 35.907757, lng: 127.766922 },\r\n\tKosovo: { lat: 42.6026359, lng: 20.902977 },\r\n\tKuwait: { lat: 29.31166, lng: 47.481766 },\r\n\tKyrgyzstan: { lat: 41.20438, lng: 74.766098 },\r\n\tLaos: { lat: 19.85627, lng: 102.495496 },\r\n\tLatvia: { lat: 56.879635, lng: 24.603189 },\r\n\tLebanon: { lat: 33.854721, lng: 35.862285 },\r\n\tLesotho: { lat: -29.609988, lng: 28.233608 },\r\n\tLiberia: { lat: 6.428055, lng: -9.429499000000002 },\r\n\tLibya: { lat: 26.3351, lng: 17.228331 },\r\n\tLiechtenstein: { lat: 47.166, lng: 9.555373 },\r\n\tLithuania: { lat: 55.169438, lng: 23.881275 },\r\n\tLuxembourg: { lat: 49.815273, lng: 6.129582999999999 },\r\n\tMadagascar: { lat: -18.766947, lng: 46.869107 },\r\n\tMalawi: { lat: -13.254308, lng: 34.301525 },\r\n\tMalaysia: { lat: 4.210484, lng: 101.975766 },\r\n\tMaldives: { lat: 3.202778, lng: 73.22068 },\r\n\tMali: { lat: 17.570692, lng: -3.996166 },\r\n\tMalta: { lat: 35.937496, lng: 14.375416 },\r\n\tMauritania: { lat: 21.00789, lng: -10.940835 },\r\n\tMauritius: { lat: -20.348404, lng: 57.55215200000001 },\r\n\tMexico: { lat: 23.634501, lng: -102.552784 },\r\n\tMoldova: { lat: 47.411631, lng: 28.369885 },\r\n\tMonaco: { lat: 43.73841760000001, lng: 7.424615799999999 },\r\n\tMongolia: { lat: 46.862496, lng: 103.846656 },\r\n\tMontenegro: { lat: 42.708678, lng: 19.37439 },\r\n\tMorocco: { lat: 31.791702, lng: -7.092619999999999 },\r\n\tMozambique: { lat: -18.665695, lng: 35.529562 },\r\n\tNamibia: { lat: -22.95764, lng: 18.49041 },\r\n\tNepal: { lat: 28.394857, lng: 84.12400799999999 },\r\n\tNetherlands: { lat: 52.132633, lng: 5.291265999999999 },\r\n\t'New Zealand': { lat: -40.900557, lng: 174.885971 },\r\n\tNicaragua: { lat: 12.865416, lng: -85.207229 },\r\n\tNiger: { lat: 17.607789, lng: 8.081666 },\r\n\tNigeria: { lat: 9.081999, lng: 8.675277 },\r\n\t'North Macedonia': { lat: 41.608635, lng: 21.745275 },\r\n\tNorway: { lat: 60.47202399999999, lng: 8.468945999999999 },\r\n\tOman: { lat: 21.4735329, lng: 55.975413 },\r\n\tPakistan: { lat: 30.375321, lng: 69.34511599999999 },\r\n\tPanama: { lat: 8.537981, lng: -80.782127 },\r\n\t'Papua New Guinea': { lat: -6.314992999999999, lng: 143.95555 },\r\n\tParaguay: { lat: -23.442503, lng: -58.443832 },\r\n\tPeru: { lat: -9.189967, lng: -75.015152 },\r\n\tPhilippines: { lat: 12.879721, lng: 121.774017 },\r\n\tPoland: { lat: 51.919438, lng: 19.145136 },\r\n\tPortugal: { lat: 39.39987199999999, lng: -8.224454 },\r\n\tQatar: { lat: 25.354826, lng: 51.183884 },\r\n\tRomania: { lat: 45.943161, lng: 24.96676 },\r\n\tRussia: { lat: 61.52401, lng: 105.318756 },\r\n\tRwanda: { lat: -1.940278, lng: 29.873888 },\r\n\t'Saint Kitts and Nevis': { lat: 17.357822, lng: -62.782998 },\r\n\t'Saint Lucia': { lat: 13.909444, lng: -60.978893 },\r\n\t'Saint Vincent and the Grenadines': { lat: 12.984305, lng: -61.287228 },\r\n\t'San Marino': { lat: 43.94236, lng: 12.457777 },\r\n\t'Sao Tome and Principe': { lat: 0.18636, lng: 6.613080999999999 },\r\n\t'Saudi Arabia': { lat: 23.885942, lng: 45.079162 },\r\n\tSenegal: { lat: 14.497401, lng: -14.452362 },\r\n\tSerbia: { lat: 44.016521, lng: 21.005859 },\r\n\tSeychelles: { lat: -4.679574, lng: 55.491977 },\r\n\t'Sierra Leone': { lat: 8.460555, lng: -11.779889 },\r\n\tSingapore: { lat: 1.352083, lng: 103.819836 },\r\n\tSlovakia: { lat: 48.669026, lng: 19.699024 },\r\n\tSlovenia: { lat: 46.151241, lng: 14.995463 },\r\n\tSomalia: { lat: 5.152149, lng: 46.199616 },\r\n\t'South Africa': { lat: -30.559482, lng: 22.937506 },\r\n\t'South Sudan': { lat: 6.876991899999999, lng: 31.3069788 },\r\n\t'Sri Lanka': { lat: 7.873053999999999, lng: 80.77179699999999 },\r\n\tSudan: { lat: 12.862807, lng: 30.217636 },\r\n\tSuriname: { lat: 3.919305, lng: -56.027783 },\r\n\tSwitzerland: { lat: 46.818188, lng: 8.227511999999999 },\r\n\tSyria: { lat: 34.80207499999999, lng: 38.996815 },\r\n\t'Taiwan*': { lat: 23.69781, lng: 120.960515 },\r\n\tTajikistan: { lat: 38.861034, lng: 71.276093 },\r\n\tTanzania: { lat: -6.369028, lng: 34.888822 },\r\n\tThailand: { lat: 15.870032, lng: 100.992541 },\r\n\t'Timor-Leste': { lat: -8.874217, lng: 125.727539 },\r\n\tTogo: { lat: 8.619543, lng: 0.824782 },\r\n\tUganda: { lat: 1.373333, lng: 32.290275 },\r\n\tUkraine: { lat: 48.379433, lng: 31.1655799 },\r\n\t'United Arab Emirates': { lat: 23.424076, lng: 53.847818 },\r\n\t'United Kingdom': { lat: 55.378051, lng: -3.435973 },\r\n\tVenezuela: { lat: 6.42375, lng: -66.58973 },\r\n\t'Western Sahara': { lat: 24.215527, lng: -12.885834 },\r\n\tUS: { lat: 37.09024, lng: -95.712891 },\r\n\tSpain: { lat: 40.463667, lng: -3.74922 },\r\n\tSweden: { lat: 60.128161, lng: 18.643501 },\r\n\tTurkey: { lat: 38.963745, lng: 35.243322 },\r\n\tZimbabwe: { lat: -19.015438, lng: 29.154857 },\r\n\tZambia: { lat: -13.133897, lng: 27.849332 },\r\n\tYemen: { lat: 15.552727, lng: 48.516388 },\r\n\tVietnam: { lat: 14.058324, lng: 108.277199 },\r\n\t'Diamond Princess': { lat: 36, lng: 139 },\r\n\tUruguay: { lat: -32.522779, lng: -55.765835 },\r\n\tUzbekistan: { lat: 41.377491, lng: 64.585262 },\r\n\t'West Bank and Gaza': { lat: 31.354676, lng: 34.308825 },\r\n\tTunisia: { lat: 33.886917, lng: 9.537499 },\r\n\t'Trinidad and Tobago': { lat: 10.691803, lng: -61.222503 },\r\n\t'MS Zaandam': { lat: 52.132633, lng: 5.291266 }\r\n};\r\n","import axios from 'axios';\r\nimport countryToLocation from './countryToLocation';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\tlet finalUrl = url;\r\n\r\n\tif (country) {\r\n\t\tfinalUrl = `${url}/countries/${country}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(finalUrl);\r\n\r\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry {\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n\t\t\tconfirmed: confirmed.total,\r\n\t\t\tdeaths: deaths.total,\r\n\t\t\tdate\r\n\t\t}));\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\t\tlet filter1 = countries.map((country) => {\r\n\t\t\treturn { name: country.name, iso2: country.iso2 };\r\n\t\t});\r\n\t\tlet filter2 = [];\r\n\t\tfilter1.forEach((country, i) => {\r\n\t\t\tif (country.iso2 !== undefined) {\r\n\t\t\t\tfilter2.push(country);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn filter2;\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchCompleteData = async () => {\r\n\ttry {\r\n\t\tconst { data: { countries } } = await axios.get(`${url}/countries`);\r\n\t\tlet countriesData = [];\r\n\t\tcountries.forEach(async (country) => {\r\n\t\t\tlet { lat, lng } = countryToLocation[country.name];\r\n\t\t\tlet countryCases = await axios.get(`${url}/countries/${country.name}`);\r\n\t\t\tif (country && !isNaN(lat) && countryCases && !isNaN(countryCases.data.confirmed.value)) {\r\n\t\t\t\tlet scale = 0.1 + 1.25 * Math.log2(countryCases.data.confirmed.value);\r\n\t\t\t\tcountriesData.push({\r\n\t\t\t\t\tname: country.name,\r\n\t\t\t\t\tlocation: { lat: lat, lng: lng },\r\n\t\t\t\t\t...countryCases.data,\r\n\t\t\t\t\tscale: scale\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn countriesData;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                    data: dailyData.map((data) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: 'rgb(158,126,245)',\r\n                    backgroundColor:'rgb(0,0,255,0.2)',\r\n                    fill: true,\r\n                    }, {\r\n                    data: dailyData.map((data) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgb(241,71,152)',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                    },\r\n                ],\r\n            }}\r\n          />\r\n        ) : null\r\n    );\r\n    \r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgb(158,126,245)', 'rgba(0, 255, 0, 0.5)', 'rgb(241,71,152)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\tconst [ countries, setCountries ] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tsetCountries(await fetchCountries());\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<FormControl variant=\"outlined\" className={styles.formControl}>\r\n\t\t\t<Select native defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{countries.map((country, i) => (\r\n\t\t\t\t\t<option key={i} value={country.name}>\r\n\t\t\t\t\t\t{country.name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Tweet.module.css';\r\n\r\nconst Tweet = () => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t<TwitterTimelineEmbed sourceType=\"profile\" screenName=\"WHO\" options={{ height: '45vh' }} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t<TwitterTimelineEmbed\r\n\t\t\t\t\t\tsourceType=\"profile\"\r\n\t\t\t\t\t\tscreenName=\"PandemicCovid20\"\r\n\t\t\t\t\t\toptions={{ height: '45vh' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport { GoogleMap, Marker, InfoWindow, LoadScript } from '@react-google-maps/api';\r\n\r\nimport mapStyles from './mapStyles';\r\nimport divStyles from './Map.module.css';\r\nimport { fetchCompleteData } from '../../api';\r\n\r\nconst center = { lat: 8, lng: -1 };\r\nconst style = { width: '90%', height: '50vh', margin: 'auto' };\r\nconst options = { styles: mapStyles, disableDefaultUI: true, zoomControl: true, fullscreenControl: true };\r\nconst googleMapsApiKey = process.env.REACT_APP_GOOGLE_KEY;\r\n\r\nclass Map extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { countriesData: [], selected: null, hasTouched: false };\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst data = await fetchCompleteData();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.setState({ countriesData: data });\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn this.state !== nextState;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { selected, countriesData } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={divStyles.wrapControl}>\r\n\t\t\t\t<LoadScript googleMapsApiKey={googleMapsApiKey}>\r\n\t\t\t\t\t<GoogleMap\r\n\t\t\t\t\t\tmapContainerStyle={style}\r\n\t\t\t\t\t\tzoom={3}\r\n\t\t\t\t\t\tcenter={center}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tonMouseOver={() => {\r\n\t\t\t\t\t\t\tif (!this.state.hasTouched) {\r\n\t\t\t\t\t\t\t\tthis.setState({ hasTouched: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{countriesData.map((country, id) => (\r\n\t\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\tposition={country.location}\r\n\t\t\t\t\t\t\t\ticon={{\r\n\t\t\t\t\t\t\t\t\tpath: window.google.maps.SymbolPath.CIRCLE,\r\n\t\t\t\t\t\t\t\t\tscale: country.scale,\r\n\t\t\t\t\t\t\t\t\tfillColor: 'red',\r\n\t\t\t\t\t\t\t\t\tfillOpacity: 0.3,\r\n\t\t\t\t\t\t\t\t\tstrokeColor: 'white',\r\n\t\t\t\t\t\t\t\t\tstrokeWeight: 0.5\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ selected: country });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{selected && (\r\n\t\t\t\t\t\t\t<InfoWindow\r\n\t\t\t\t\t\t\t\tposition={selected.location}\r\n\t\t\t\t\t\t\t\tonCloseClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ selected: null });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<h2>{selected.name}</h2>\r\n\t\t\t\t\t\t\t\t\t<p>Infected: {selected.confirmed.value.toLocaleString('en')}</p>\r\n\t\t\t\t\t\t\t\t\t<p>Recovered: {selected.recovered.value.toLocaleString('en')}</p>\r\n\t\t\t\t\t\t\t\t\t<p>Deaths: {selected.deaths.value.toLocaleString('en')}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</GoogleMap>\r\n\t\t\t\t</LoadScript>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Map;\r\n","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"32\"\r\n            },\r\n            {\r\n                \"lightness\": \"-3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"weight\": \"1.18\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"-70\"\r\n            },\r\n            {\r\n                \"lightness\": \"14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"100\"\r\n            },\r\n            {\r\n                \"lightness\": \"-14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"lightness\": \"12\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, Tweet, Map } from './components';\r\nimport { Grid } from '@material-ui/core';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\nimport image from './images/covidtracker.png';\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdata: {},\r\n\t\t\tcountry: ''\r\n\t\t};\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({ data: fetchedData });\r\n\t}\r\n\r\n\thandleCountryChange = async (country) => {\r\n\t\tconst data = await fetchData(country);\r\n\t\tthis.setState({ data, country: country });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { data, country } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t<Grid item lg={6} md={12}>\r\n\t\t\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t\t\t<img className={styles.image} src={image} alt=\"COVID-19\" />\r\n\t\t\t\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\r\n\t\t\t\t\t\t\t<Cards data={data} />\r\n\t\t\t\t\t\t\t<Chart data={data} country={country} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item lg={6} md={12}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item md={12} style={{ width: '100%' }}>\r\n\t\t\t\t\t\t\t\t<Map />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item md={12}>\r\n\t\t\t\t\t\t\t\t<Tweet />\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2SHRy\",\"image\":\"App_image__3x6BT\"};"],"sourceRoot":""}